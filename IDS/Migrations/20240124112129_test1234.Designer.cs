// <auto-generated />
using System;
using IDS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IDS.Migrations
{
    [DbContext(typeof(ActClubContext))]
    [Migration("20240124112129_test1234")]
    partial class test1234
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IDS.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EventId")
                        .HasName("PK__Events__7944C8701954088D");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("IDS.Models.EventGuide", b =>
                {
                    b.Property<int>("EventGuideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventGuideID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventGuideId"));

                    b.Property<int?>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    b.Property<int?>("GuideId")
                        .HasColumnType("int")
                        .HasColumnName("GuideID");

                    b.HasKey("EventGuideId")
                        .HasName("PK__EventGui__6BD595D024DACBB2");

                    b.HasIndex("EventId");

                    b.HasIndex("GuideId");

                    b.ToTable("EventGuides");
                });

            modelBuilder.Entity("IDS.Models.EventMember", b =>
                {
                    b.Property<int>("EventMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventMemberID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventMemberId"));

                    b.Property<int?>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.HasKey("EventMemberId")
                        .HasName("PK__EventMem__0C810331FF26C45E");

                    b.HasIndex("EventId");

                    b.HasIndex("MemberId");

                    b.ToTable("EventMembers");
                });

            modelBuilder.Entity("IDS.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC40E012EB");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053400C43E79")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IDS.Models.EventGuide", b =>
                {
                    b.HasOne("IDS.Models.Event", "Event")
                        .WithMany("EventGuides")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__EventGuid__Event__787EE5A0");

                    b.HasOne("IDS.Models.User", "Guide")
                        .WithMany("EventGuides")
                        .HasForeignKey("GuideId")
                        .HasConstraintName("FK__EventGuid__Guide__797309D9");

                    b.Navigation("Event");

                    b.Navigation("Guide");
                });

            modelBuilder.Entity("IDS.Models.EventMember", b =>
                {
                    b.HasOne("IDS.Models.Event", "Event")
                        .WithMany("EventMembers")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__EventMemb__Event__74AE54BC");

                    b.HasOne("IDS.Models.User", "Member")
                        .WithMany("EventMembers")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK__EventMemb__Membe__75A278F5");

                    b.Navigation("Event");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("IDS.Models.Event", b =>
                {
                    b.Navigation("EventGuides");

                    b.Navigation("EventMembers");
                });

            modelBuilder.Entity("IDS.Models.User", b =>
                {
                    b.Navigation("EventGuides");

                    b.Navigation("EventMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
